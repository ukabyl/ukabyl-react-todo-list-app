{"version":3,"sources":["components/todo-header/index.js","components/todo-header/todo-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/filters/index.js","components/filters/filters.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/todo-new-item/index.js","components/todo-new-item/todo-new-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoHeader","className","SearchPanel","state","search","onSearchChange","e","target","value","setState","props","type","this","placeholder","onChange","Component","Filters","buttons","name","label","filter","onChangeFilter","map","clazz","key","onClick","TodoListItem","item","onChangeImportant","onChangeDone","onDeleteItem","classNames","important","done","TodoList","items","elements","id","length","TodoNewItem","newItem","onNewItemChanged","createNewItem","preventDefault","console","log","onSubmit","App","maxId","todoData","idx","findIndex","el","slice","changeProp","arr","prop","changedItem","searchText","toLowerCase","indexOf","visibleItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98a583ee.chunk.js","sourcesContent":["import TodoHeader from './todo-header';\r\n\r\nexport default TodoHeader;","import React from 'react'\r\n\r\nimport './todo-header.css';\r\n\r\nconst TodoHeader = () => {\r\n    return (\r\n        <div className=\"todo-header\">\r\n            <h1>My Todo List</h1>\r\n            <span>3 more to do, 0 done</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const search = e.target.value;\r\n        this.setState({ search })\r\n        this.props.onSearchChange(search);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"search-panel\">\r\n                <input \r\n                    className=\"form-control\" \r\n                    type=\"text\"\r\n                    value={this.state.search} \r\n                    placeholder=\"What would like to find?\" \r\n                    onChange={this.onSearchChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import Filters from './filters';\r\n\r\nexport default Filters;","import React, { Component } from 'react'\r\n\r\nimport './filters.css';\r\n\r\nexport default class Filters extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' },\r\n    ]\r\n\r\n    state = {\r\n        filter: '',\r\n        \r\n    }\r\n\r\n    onChangeFilter = (filter) => {\r\n        this.setState({filter});\r\n        this.props.onChangeFilter(filter);\r\n    }\r\n    \r\n    render() {\r\n        const { filter } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = name === filter;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    onClick={() => this.onChangeFilter(name)}\r\n                    className={`btn ${clazz}`}>{label}\r\n                </button>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"filters\">\r\n                { buttons }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React from 'react'\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ item, onChangeImportant, onChangeDone, onDeleteItem }) => {\r\n    const { label, important, done } = item;\r\n\r\n    let classNames = 'todo-list-item list-group-item';\r\n    if ( important ) {\r\n        classNames += ' important';\r\n    }\r\n    if ( done ) {\r\n        classNames += ' done';\r\n    }\r\n\r\n    return (\r\n        <li className={classNames}\r\n        >\r\n            <span \r\n                onClick={onChangeDone}\r\n            >{ label }</span>\r\n            <div className=\"todo-list-item__buttons\">\r\n                <button \r\n                    className=\"btn btn-primary\"\r\n                    onClick={onChangeImportant}\r\n                    ><i className=\"fa fa-exclamation\"></i></button>\r\n                <button \r\n                    onClick={onDeleteItem}\r\n                    className=\"btn btn-danger\"\r\n                    ><i className=\"fa fa-trash\"></i></button>\r\n            </div>\r\n        </li> \r\n    );\r\n}\r\n\r\nexport default TodoListItem;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react'\r\n\r\nimport './todo-list.css';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\n\r\nconst TodoList = ({ items, onChangeImportant, onChangeDone, onDeleteItem }) => {\r\n    const elements = items.map((item) => {\r\n        const { id, ...props } = item;\r\n\r\n        return <TodoListItem \r\n            onChangeImportant={() => onChangeImportant(id)}\r\n            onChangeDone={() => onChangeDone(id)}\r\n            onDeleteItem={() => onDeleteItem(id)} \r\n            key={id} item={props} />\r\n    })\r\n\r\n    return (\r\n        <ul className=\"todo-list list-group text-center\">\r\n            { elements.length ? elements : 'You\\'ve done everything you want' }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import TodoNewItem from './todo-new-item';\r\n\r\nexport default TodoNewItem;","import React, { Component } from 'react'\r\n\r\nimport './todo-new-item.css';\r\n\r\nexport default class TodoNewItem extends Component {\r\n    \r\n    state = {\r\n        newItem: '',\r\n        clazz: ''\r\n    }\r\n\r\n    onNewItemChanged = (e) => {\r\n        const newItem = e.target.value;\r\n        this.setState({newItem})\r\n    }\r\n\r\n    createNewItem = (e) => {\r\n        e.preventDefault();\r\n        console.log(e)\r\n        if ( this.state.newItem.length < 1 ) {\r\n            return\r\n        }\r\n        this.props.createNewItem(this.state.newItem);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todo-new-item\">\r\n                <form onSubmit={this.createNewItem}>\r\n                    <input\r\n                        value={this.state.newItem}\r\n                        onChange={this.onNewItemChanged} \r\n                        className=\"form-control\"\r\n                        type=\"text\" \r\n                        placeholder=\"What would like to do?\" />\r\n                    <button type=\"submit\" className=\"btn btn-outline-secondary\">Add</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react'\r\n\r\nimport './app.css';\r\n\r\nimport TodoHeader from '../todo-header';\r\nimport SearchPanel from '../search-panel';\r\nimport Filter from '../filters';\r\nimport TodoList from '../todo-list';\r\nimport TodoNewItem from '../todo-new-item';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            {label: 'Drink Coffee', important: false, done: false, id: 1},\r\n            {label: 'Learn React', important: true, done: false, id: 2},\r\n            {label: 'Build an awesome app', important: true, done: false, id: 3},\r\n            {label: 'Do exercises', important: false, done: false, id: 4},\r\n        ],\r\n        search: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    createNewItem = (label) => {\r\n        const newItem = {\r\n            label, \r\n            important: false, \r\n            done: false, \r\n            id: this.maxId++\r\n        }\r\n\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: [...todoData, newItem]\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(el => id === el.id);\r\n\r\n            return {\r\n                todoData: [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n            }\r\n        })\r\n    }\r\n\r\n    changeProp(arr, prop, id) {\r\n        const idx = arr.findIndex(el => id === el.id);\r\n        const changedItem = {...arr[idx]};\r\n\r\n        const  newItem = {...changedItem, [prop]: !changedItem[prop]};\r\n        \r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onChangeImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const newArr = this.changeProp(todoData, 'important', id);\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        }) \r\n    }\r\n    onChangeDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const newArr = this.changeProp(todoData, 'done', id);\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        }) \r\n    }\r\n\r\n    search(arr, searchText) {\r\n        if (!searchText.length) {\r\n            return arr;\r\n        }\r\n        return arr.filter(el => {\r\n            return el.label.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\r\n        })\r\n    }\r\n\r\n    onSearchChange = (search) => {\r\n        this.setState({ search });\r\n    }\r\n\r\n    filter(arr, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return arr;\r\n            case 'active':\r\n                return arr.filter(el => !el.done);\r\n            case 'done':\r\n                return arr.filter(el => el.done);\r\n            default: \r\n                return arr;\r\n        }\r\n    }\r\n\r\n    onChangeFilter = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    render() {\r\n        const { todoData, search, filter } = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, search), filter);\r\n\r\n        return (\r\n            <div className=\"todo\">\r\n                <TodoHeader />\r\n                <div className=\"todo-filters\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange} />\r\n                    <Filter filter={filter} onChangeFilter={this.onChangeFilter} />\r\n                </div>\r\n                <TodoList \r\n                    onChangeImportant={this.onChangeImportant}\r\n                    onChangeDone={this.onChangeDone} \r\n                    items={visibleItems} \r\n                    onDeleteItem={this.onDeleteItem}/>\r\n                <TodoNewItem createNewItem={this.createNewItem} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}